● Create a TCP server that listens for incoming connections in an infinite loop in the main thread.
● Create a log.txt file on the disk during server startup.
● Process incoming connections in the main thread, create and assign a new thread to each connection/client session, and generate a random clientID (0...MAX_UINT) for each client session.
● Continuously listen for new connections in the main thread while handling client sessions in separate threads.
● Receive messages from clients, process them (performing addition, subtraction, multiplication, or division as specified in the message), and write the results to the log.txt file in the format: "[id of client thread] : [clientId] : [command received from client(OperandA, OperandB)] : [result of command processing]".
● Handle disconnections of clients properly, releasing the client thread, and writing a message to the log.txt file in the format: "[id of client thread] : [clientId] : [Client has disconnected]".
● Implement a mechanism to limit the number of simultaneous connections to N*10 (where N is the number of cores on the machine, or 4 if N is undetectable). Reject new clients if the limit is reached and write an appropriate message to the log.txt file.
